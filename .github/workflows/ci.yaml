name: CI/CD

on:
  push

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: oracle
          cache: maven

      - name: Build
        shell: cmd
        run: mvn clean package -B -Dmaven.test.skip=true

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: application
          path: target/*.jar

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: application

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          files: "*.jar"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: application
      
      - name: Rename
        shell: sh
        run: mv *.jar application.jar

      - name: Deploy
        uses: easingthemes/ssh-deploy@main
        with:
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          remote_host: ${{ secrets.REMOTE_HOST }}
          remote_user: ${{ secrets.REMOTE_USER }}
          script_after: |
            pid=`ps -f | grep java | grep application.jar | grep -v grep | awk '{print $2}'`
            if [ "x$pid" != "x" ]; then kill $pid && while kill -0 $pid > /dev/null 2>&1; do sleep 1; done; fi
            nohup java -jar application.jar > /dev/null 2>&1 &
          script_after_required: true
